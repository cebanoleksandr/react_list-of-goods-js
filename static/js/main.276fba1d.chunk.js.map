{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","goods","setGoods","isAlphabeticaly","setIsAlphabeticaly","isLength","setIsLength","isReverse","setReverse","className","type","cn","onClick","newGoods","sort","good1","good2","localeCompare","sortByAlphabetically","length","sortByLength","reverse","reverseGoods","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAkBC,EAAlB,KAoCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYR,IAEdS,QAAS,kBA1CY,WAC3B,IAAMC,EAAW,YAAIZ,GAClBa,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAE9Cd,EAASW,GACTT,GAAmB,GACnBE,GAAY,GACZE,GAAW,GAmCUU,IALjB,iCAUA,wBACER,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYN,IAEdO,QAAS,kBA1CI,WACnB,IAAMC,EAAW,YAAIZ,GAClBa,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAE/CjB,EAASW,GACTP,GAAY,GACZF,GAAmB,GACnBI,GAAW,GAmCUY,IALjB,4BAUA,wBACEV,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYJ,IAEdK,QAAS,kBA1CI,WACnB,IAAMC,EAAW,YAAIZ,GAAOoB,UAE5BnB,EAASW,GACTL,GAAYD,GAsCSe,IALjB,uBAUGnB,GAAmBE,GAAYE,IAChC,wBACEG,KAAK,SACLD,UAAU,4BACVG,QAAS,kBA3CjBV,EAASJ,GACTM,GAAmB,GACnBE,GAAY,QACZE,GAAW,IAqCL,sBAUJ,6BACGP,EAAMsB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.276fba1d.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [isAlphabeticaly, setIsAlphabeticaly] = useState(true);\n  const [isLength, setIsLength] = useState(true);\n  const [isReverse, setReverse] = useState(true);\n\n  const sortByAlphabetically = () => {\n    const newGoods = [...goods]\n      .sort((good1, good2) => good1.localeCompare(good2));\n\n    setGoods(newGoods);\n    setIsAlphabeticaly(false);\n    setIsLength(true);\n    setReverse(true);\n  };\n\n  const sortByLength = () => {\n    const newGoods = [...goods]\n      .sort((good1, good2) => good1.length - good2.length);\n\n    setGoods(newGoods);\n    setIsLength(false);\n    setIsAlphabeticaly(true);\n    setReverse(true);\n  };\n\n  const reverseGoods = () => {\n    const newGoods = [...goods].reverse();\n\n    setGoods(newGoods);\n    setReverse(!isReverse);\n  };\n\n  const reset = () => {\n    setGoods(goodsFromServer);\n    setIsAlphabeticaly(true);\n    setIsLength(true);\n    setReverse(true);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': isAlphabeticaly,\n          })}\n          onClick={() => sortByAlphabetically()}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': isLength,\n          })}\n          onClick={() => sortByLength()}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': isReverse,\n          })}\n          onClick={() => reverseGoods()}\n        >\n          Reverse\n        </button>\n\n        {!(isAlphabeticaly && isLength && isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => reset()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}